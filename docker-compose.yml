version: "3.8"

services:
  db:
    image: postgres:16
    container_name: discord_db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
      # - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped
    networks:
      - app_net
    # Brak portów -> DB nie jest wystawiony na świat

  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: discord_bot
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net
    # Bot nie potrzebuje portów (łączenie OUT do Discord API)

  # Opcjonalnie: pgAdmin (panel www do DB)
  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: rand1nhof1@gmail.com
      PGADMIN_DEFAULT_PASSWORD: rand1nho_admin
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app_net

volumes:
  db_data:
  # pgadmin_data:

networks:
  app_net:
    driver: bridge
